
  name: Reusable workflow to validate annotations/tags against K8s Manifest files using Centralized OPA policies
  on:
    workflow_call:
      inputs:
        env_branch:
          required: true
          type: string
      secrets:
        token:
          required: true
  jobs:
    policy-check:
    # adding if condition at top level as we don't want to run job if branch is shared
       if: inputs.env_branch != 'shared'
       runs-on: ubuntu-latest
       container: openpolicyagent/conftest:latest
#        needs:
#        - detect-changes
#        - render
#        strategy:
#          # Do not allow one failed branch to cause others to fail fast
#          fail-fast: false
#          matrix:
#            env: ${{ fromJSON(needs.detect-changes.outputs.env) }}
       steps:
       - name: Checkout opa-policies
         #removed github.event_name == 'pull_request'  from if condition in called workflow event is not pull_request
         #if: matrix.env != 'shared'
        # if: inputs.env_branch != 'shared'
         uses: actions/checkout@v2
         with:
          repository: OpenGov/opa-policies
          path: policy
          token: ${{ secrets.token }}
          #token: ${{ secrets.GIT_HUB_ACCESS_TOKEN_ENG_BOT_READER }}
       - name: Convert slashes to dashes for ENV_BRANCH
         id: slashes-to-dashes
         run: echo "ENV_BRANCH=$(echo ${{ inputs.env_branch }} | tr '/' '-')" >> $GITHUB_OUTPUT
    # Fetch manifests artifact from render job
       - uses: actions/download-artifact@v3
         #removed github.event_name == 'pull_request'  from if condition in called workflow event is not pull_request
         #if: matrix.env != 'shared'
        3 if: inputs.env_branch != 'shared'
         with:
          name: ${{ steps.slashes-to-dashes.outputs.ENV_BRANCH }}-manifests
       - name: OPA Policy to check required annotations/tags against K8s Manifest files.
         #removed github.event_name == 'pull_request'  from if condition in called workflow event is not pull_request
         #if: matrix.env != 'shared'
      #   if: inputs.env_branch != 'shared'
        # Ignore policy check for now; remove once it is passing in all envs
        #continue-on-error: true
         run: |
           conftest test -p policy/production/kubernetes/test_annotations.rego *.yaml -o table
